<?xml version="1.0"?>
<block>
  <name>Hermes Lite 2 NB</name>
  <key>hermeslite2_NB</key>
  <category>[Hermes Lite 2]</category>
  <flags>throttle</flags>
  <import>import hermeslite2</import>
  <make>hermeslite2.hermesNB($Rx0F, $Rx1F, $TxF, $PTTmode, $PTTTx, $PTTRx, $TxDrive, $RxSmp, $Intfc, $Verbose, $num_outputs, $MACAddr, $AGC, $LNAG, $PA, $Q5)</make>
  <callback>set_Receive0Frequency($Rx0F)</callback>
  <callback>set_Receive1Frequency($Rx1F)</callback>
  <callback>set_RxSampRate($RxSmp)</callback>
  <callback>set_PTTMode($PTTmode)</callback>
  <callback>set_PTTOffMutesTx($PTTTx)</callback>
  <callback>set_PTTOnMutesRx($PTTRx)</callback>
  <callback>set_TxDrive($TxDrive)</callback>
  <callback>set_TransmitFrequency($TxF)</callback>
  <callback>set_Verbose($Verbose)</callback>
  <callback>set_HardwareAGC($AGC)</callback>
  <callback>set_LNAGain($LNAG)</callback>
  <callback>set_OnboardPA($PA)</callback>
  <callback>set_Q5Switch($Q5)</callback>
 <!-- Make one 'param' node for every Parameter you want settable from the GUI.
       Sub-nodes:
       * name
       * key (makes the value accessible as $keyname, e.g. in the make node)
       * type -->
  <param>
    <name>Rcvr 0 Frequency, Hz.</name>
    <key>Rx0F</key>
    <value>7200000</value>
    <type>real</type>
  </param>
  <param>
    <name>Rcvr 1 Frequency, Hz.</name>
    <key>Rx1F</key>
    <value>7200000</value>
    <type>real</type>
  </param>
  <param>
    <name>Transmit Frequency, Hz.</name>
    <key>TxF</key>
    <value>7200000</value>
    <type>real</type>
  </param>
  <param>
    <name>Rx Sample Rate</name>
    <key>RxSmp</key>
    <value>192000</value>
    <type>int</type>
    <option>
      <name>48000</name>
      <key>48000</key>
    </option>
    <option>
      <name>96000</name>
      <key>96000</key>
    </option>
    <option>
      <name>192000</name>
      <key>192000</key>
    </option>
    <option>
      <name>384000</name>
      <key>384000</key>
    </option>
  </param>
  <param>
    <name>PTT On Mutes Rx</name>
    <key>PTTRx</key>
    <value>True</value>
    <type>bool</type>
  </param>
  <param>
    <name>PTT Off Mutes Tx</name>
    <key>PTTTx</key>
    <value>True</value>
    <type>bool</type>
  </param>
  <param>
    <name>Tx PTT mode Off/Vox/On</name>
    <key>PTTmode</key>
    <value>0</value>
    <type>int</type>
  </param>
  <param>
    <name>Tx Drive Level (0..255)</name>
    <key>TxDrive</key>
    <value>0</value>
    <type>int</type>
  </param>
  <param>
    <name>Num Rcvrs (1 or 2)</name>
    <key>num_outputs</key>
    <value>1</value>
    <type>int</type>
  </param>
  <param>
    <name>Ethernet Interface</name>
    <key>Intfc</key>
    <value>"eth0"</value>
    <type>raw</type>
  </param>
  <param>
    <name>Verbose (1=on, 0=off)</name>
    <key>Verbose</key>
    <value>0</value>
    <type>int</type>
    <option>
      <name>Off</name>
      <key>0</key>
    </option>
    <option>
      <name>On</name>
      <key>1</key>
    </option>
  </param>
  <param>
    <name>MAC Address or *</name>
    <key>MACAddr</key>
    <value>"*"</value>
    <type>string</type>
  </param>
  <param>
    <name>Hardware AGC</name>
    <key>AGC</key>
    <value>False</value>
    <type>bool</type>
  </param>
  <param>
    <name>LNA Gain</name>
    <key>LNAG</key>
    <value>18</value>
    <type>int</type>
  </param>
  <param>
    <name>Enable PA</name>
    <key>PA</key>
    <value>False</value>
    <type>bool</type>
  </param>
  <param>
    <name>Q5 switch external PTT in low power mode</name>
    <key>Q5</key>
    <value>False</value>
    <type>bool</type>
  </param>



<check>$num_outputs >= 1</check> 
<check>2 >= $num_outputs</check>   

  <!-- Make one 'sink' node per input. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <sink>
    <name>in</name>
    <type>complex</type>
  </sink>

  <!-- Make one 'source' node per output. Sub-nodes:
       * name (an identifier for the GUI)
       * type e.g.   int, real, complex, byte, short, xxx_vector, ...
       * vlen
       * optional (set to 1 for optional inputs) -->
  <source>
    <name>out</name>
    <type>complex</type>
    <nports>$num_outputs</nports>
  </source>

  <doc>
  This block is the HPSDR Hermes/Metis module.
  It supports one or two receivers and one transmitter in the Narrow Band
  (digital downconversion) mode.
  *RxSamp = 48000, 96000, 192000, or 384000
  *RxPreamp = 0 (Off), or  1 (On)
  *PTTMode = 0 (TxOff),  1 (Vox on Txframe contents), or  2 (TxOn)
  *PTTOffMutesTx = 0 (Tx always emits), 1 (Tx IQ is zeroed when PTT is Off)
  *PTTOnMutesRx = 0 (Rx always receives), 1 (Rx IQ is zeroed when PTT is On)
  *TxDrive = 0..255 (0 is minimum (but not zero) drive, 255 is maximum drive)
  Rcvr0 corresponds to out0, Rcvr1 corresponds to out1.
  *Interface = the ethernet interface to use.
    Example: "eth0" {including quote marks}.
  *MACAddr = "HH:HH:HH:HH:HH:HH" with HH being the MAC Address hex values, or "*" to
    select the first detected Metis/Hermes regardless of it's MAC Address.
    MACAddr is a string (and must be enclosed in quotes).
  Update: 03-13-2014: Reverse transmit I and Q samples (FPGA reverses them).
  </doc>
</block>
